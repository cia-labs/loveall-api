definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handlers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.MerchantInfo:
    properties:
      created_at:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      location:
        type: string
      merchant_name:
        type: string
      updated_at:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /example/helloworld:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - example
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and create a session
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "401":
          description: Unauthorized
      summary: Authenticate user and create a session
      tags:
      - authentication
  /merchants:
    get:
      consumes:
      - application/json
      description: Returns a list of all merchants in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MerchantInfo'
            type: array
      summary: Get all merchants
      tags:
      - Merchants
    post:
      consumes:
      - application/json
      description: Create a new merchant with the provided details
      parameters:
      - description: Merchant details
        in: body
        name: Merchant
        required: true
        schema:
          $ref: '#/definitions/models.MerchantInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Create a new merchant
      tags:
      - merchants
  /merchants/{id}:
    get:
      consumes:
      - application/json
      description: Returns a single merchant by ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MerchantInfo'
      summary: Get merchant by ID
      tags:
      - Merchants
    put:
      consumes:
      - application/json
      description: Update an existing merchant with the provided details
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Merchant details
        in: body
        name: Merchant
        required: true
        schema:
          $ref: '#/definitions/models.MerchantInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Update an existing merchant
      tags:
      - merchants
  /offers:
    get:
      consumes:
      - application/json
      description: Get all merchant offers available
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get all merchant offers
      tags:
      - offers
    post:
      consumes:
      - application/json
      description: Create a new merchant offer with the provided details
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Create a new merchant offer
      tags:
      - offers
  /offers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing merchant offer by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Delete an existing merchant offer
      tags:
      - offers
    get:
      consumes:
      - application/json
      description: Get a specific merchant offer by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get a specific merchant offer
      tags:
      - offers
    put:
      consumes:
      - application/json
      description: Update an existing merchant offer with the provided details
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Update an existing merchant offer
      tags:
      - offers
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Get all card subscriptions available
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get all card subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new card subscription with the provided details
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Create a new card subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing card subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Delete an existing card subscription
      tags:
      - subscriptions
    get:
      consumes:
      - application/json
      description: Get a specific card subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get a specific card subscription
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update an existing card subscription with the provided details
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Update an existing card subscription
      tags:
      - subscriptions
  /transactions:
    get:
      consumes:
      - application/json
      description: Get all transactions available
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get all transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create a new transaction with the provided details
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Create a new transaction
      tags:
      - transactions
  /transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a transaction with a specific ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
      summary: Delete a transaction
      tags:
      - transaction
    get:
      consumes:
      - application/json
      description: Get a specific transaction by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Get a specific transaction
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update a transaction with a specific ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Update an existing transaction
      tags:
      - transaction
  /users:
    get:
      consumes:
      - application/json
      description: Returns a list of all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Returns a single user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Updates an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user by ID
      tags:
      - Users
swagger: "2.0"
